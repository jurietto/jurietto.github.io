name: Update Commits JSON

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  schedule:
    - cron: '0 * * * *'  # Run every hour to ensure your commits are always up to date

jobs:
  update_commits:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get the commits from this year
      run: |
        # Get all commits from this year (January 1st to today)
        git log --since="Jan 1, $(date +'%Y')" --pretty=format:'{
          "author": "%an",
          "message": "%s",
          "date": "%ad",
          "files_changed": [' > commits.json
        
        # Loop through each commit and get the list of files changed
        for commit in $(git log --since="Jan 1, $(date +'%Y')" --pretty=format:"%H"); do
          files=$(git show --name-only --oneline --pretty=format:"" --no-patch $commit | tail -n +2 | jq -R . | jq -s .)
          echo "  {\"author\": \"$(git show -s --format=%an $commit)\", \"message\": \"$(git show -s --format=%s $commit)\", \"date\": \"$(git show -s --format=%ad $commit)\", \"files_changed\": $files}," >> commits.json
        done
        
        # Remove the trailing comma after the last entry
        sed -i '$ s/,$//' commits.json
        
        # Add the closing bracket for the JSON array
        echo "]" >> commits.json

        # Use jq to ensure proper formatting of the commits.json file
        jq -s '.' commits.json > commits.json.pretty && mv commits.json.pretty commits.json

    - name: Commit the updated commits.json
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git add commits.json
        git commit -m "Update commits.json with commits from this year" || echo "No changes to commit"
        git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git HEAD:main
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
