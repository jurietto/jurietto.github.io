name: Update Commits JSON

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'  # Run every hour

jobs:
  update_commits:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get the commits from this year
      run: |
        # Initialize the commits.json file with an empty array
        echo "[" > commits.json

        first_commit=true
        for commit in $(git log --since="Jan 1, $(date +'%Y')" --pretty=format:"%H"); do
          # Get the files changed for each commit
          files=$(git show --name-only --oneline --pretty=format:"" --no-patch $commit | tail -n +2 | jq -R . | jq -s .)

          # Get commit details: author, message, date
          author=$(git show -s --format=%an $commit)
          message=$(git show -s --format=%s $commit)
          date=$(git show -s --format=%ad $commit)

          # If it's not the first commit, add a comma separator
          if [ "$first_commit" = true ]; then
            first_commit=false
          else
            echo "," >> commits.json
          fi

          # Append the commit info in JSON format
          echo "  {" >> commits.json
          echo "    \"author\": \"$author\"," >> commits.json
          echo "    \"message\": \"$message\"," >> commits.json
          echo "    \"date\": \"$date\"," >> commits.json
          echo "    \"files_changed\": $files" >> commits.json
          echo "  }" >> commits.json
        done

        # Close the JSON array
        echo "]" >> commits.json

        # Use jq to ensure the final commits.json is formatted properly
        jq . commits.json > commits.json.pretty && mv commits.json.pretty commits.json

    - name: Commit the updated commits.json
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git add commits.json
        git commit -m "Update commits.json with commits from this year" || echo "No changes to commit"
        git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git HEAD:main
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
